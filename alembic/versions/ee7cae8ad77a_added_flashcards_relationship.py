"""added flashcards relationship

Revision ID: ee7cae8ad77a
Revises: 2692555cb419
Create Date: 2025-05-12 17:05:57.708648

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ee7cae8ad77a'
down_revision: Union[str, None] = '2692555cb419'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_cards_id', table_name='cards')
    op.drop_table('cards')
    op.add_column('categories', sa.Column('id', sa.Integer(), nullable=False))
    op.alter_column('categories', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_index(op.f('ix_categories_name'), 'categories', ['name'], unique=False)
    op.drop_column('categories', 'description')
    op.drop_column('categories', 'category_id')
    op.drop_column('categories', 'updated_at')
    op.drop_column('categories', 'created_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('categories', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.add_column('categories', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.add_column('categories', sa.Column('category_id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.add_column('categories', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_categories_name'), table_name='categories')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.alter_column('categories', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.drop_column('categories', 'id')
    op.create_table('cards',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('question', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('answer', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('deck_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['deck_id'], ['decks.id'], name='cards_deck_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='cards_pkey')
    )
    op.create_index('ix_cards_id', 'cards', ['id'], unique=False)
    # ### end Alembic commands ###
